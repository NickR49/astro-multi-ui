---
import { getCollection } from "astro:content";

export interface Props {
  title: string;
}

const { title } = Astro.props;
const allExamples = await getCollection("example");
---

<!DOCTYPE html>
<html lang="en" data-theme="bumblebee">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="drawer drawer-mobile">
      <input id="my-drawer" type="checkbox" class="drawer-toggle" />
      <div class="drawer-content">
        <div class="navbar bg-base-100">
          <div class="flex-none">
            <label
              for="my-drawer"
              class="btn btn-square btn-ghost drawer-button"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                class="inline-block w-5 h-5 stroke-current"
                ><path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"></path></svg
              >
            </label>
          </div>
          <div class="flex-1">
            <a class="btn btn-ghost normal-case text-xl">N I X</a>
          </div>
          <div class="flex-none gap-2">
            <div class="form-control">
              <input
                type="text"
                placeholder="Search"
                class="input input-bordered"
              />
            </div>
            <button class="btn btn-square btn-ghost">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                class="inline-block w-5 h-5 stroke-current"
                ><path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"
                ></path></svg
              >
            </button>
          </div>
        </div>
        <main>
          <slot />
        </main>
      </div>
      <div class="drawer-side">
        <label for="my-drawer" class="drawer-overlay"></label>
        <ul class="menu p-4 w-80 bg-base-100 text-base-content">
          {
            allExamples
              .sort((a, b) => a.data.order - b.data.order)
              .map((example) => (
                <li>
                  <a href={`/examples/${example.slug}`}>{example.data.title}</a>
                </li>
              ))
          }
        </ul>
      </div>
    </div>
  </body>
</html>
<style is:global>
  :root {
    --accent: 124, 58, 237;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      #da62c4 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
    background-color: #f6f6f6;
  }
  /* main {
    margin: auto;
    padding: 1rem;
    padding-top: 0;
    max-width: 60ch;
  } */
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }
</style>
